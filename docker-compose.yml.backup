version: '3.8'

services:
  # Backend API (se connecte au MySQL existant)
  backend:
    build: 
      context: ./backend-gestion-biblio
      dockerfile: Dockerfile
    container_name: biblio_backend
    restart: unless-stopped
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - FRONTEND_URL=${FRONTEND_URL}
    ports:
      - "${BACKEND_PORT}:5000"
    volumes:
      - ./backend-gestion-biblio/uploads:/app/uploads
    networks:
      - biblio_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build: 
      context: ./frontend-gestion-biblio
      dockerfile: Dockerfile
    container_name: biblio_frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://backend:5000
    ports:
      - "${FRONTEND_PORT}:80"
    depends_on:
      - backend
    networks:
      - biblio_network

networks:
  biblio_network:
    driver: bridge
